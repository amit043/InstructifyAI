ID,Epic,Title,Description,AcceptanceCriteria,DoD,Files,Tests,PR
F40-01,Parser & Data Quality,Tables v1.5 (structured),HTML: convert <table> to TSV/CSV; PDF: detect grid-like tables and extract best-effort rows/cols. Emit blocks as kind=table_text with file_path/page/section_path; token-bounded.,≥80% of HTML tables exported to structured rows; ≥50% of regular PDF tables produce useful row text; chunk meta includes kind=table_text and table_id; manifest counts tables.,Implement HTML table extractor and PDF grid-to-rows heuristic; wire into chunker; add toggle in ProjectSettings; update exporters to include table_text; docs and examples added.,parsers/html_tables.py; parsers/pdf_tables_v1.py; chunking/chunker_v2.py; exporters/common.py; api/schemas.py,tests/test_tables_texty.py,[F40-01] Tables v1.5 (structured)
F40-02,Parser & Data Quality,Figures & captions + image-block OCR,"Detect figures (HTML <figure>, PDF image blocks + nearby text); extract caption text; OCR image-only blocks (not whole page) with bounding box mapping; add image refs for preview.",Captions present for ≥70% figure blocks on sample set; +10% median text coverage on mixed PDFs; manifest lists figure_count and ocr_image_blocks.,Add figure detection for HTML/PDF; crop OCR on image bbox; store caption and link to source image in MinIO; extend manifest; docs and metrics.,parsers/html_figures.py; parsers/pdf_figures.py; worker/ocr/image_block.py; storage/object_store.py,tests/test_figures_and_captions.py,[F40-02] Figures & captions + image-block OCR
F40-03,Parser & Data Quality,Layout-aware chunking (steps/sections),Use heading hierarchy and list/step detection to split chunks at procedure steps; maintain ordered step_id and section_path; ~900 tokens per chunk deterministic.,Retrieval over step-style queries improves ≥10% on small eval; chunk meta has step_id when detected; determinism test passes.,Implement step/list detectors; integrate splitting logic; update exporters to keep step_id; add examples and docs.,chunking/chunker_v2.py; parser_pipeline/structure.py; exporters/common.py,tests/test_layout_chunking.py,[F40-03] Layout-aware chunking
F40-04,Curation Workflow,Curation Lite UI (metadata-only reviewer),"Minimal, keyboard-first UI to browse chunks, edit metadata fields, accept suggestions, and bulk-apply; not a full LS replacement.","Median review time per chunk drops ≥25% vs LS-only baseline on pilot; supports search/filter, hotkeys, undo, bulk operations.",Create a small Next.js/React app served behind /curation (dev only initially); reuse API; auth via existing JWT; add hotkeys and list/detail panes.,ui/curation-lite/*; api/main.py,tests/ui/test_curation_lite_smoke.py,[F40-04] Curation Lite UI
F40-05,Dataset Ops & Governance,Dataset releases & snapshotting,Create immutable dataset releases: freeze manifest/content hash; expose list/get; provide diff between releases (added/removed/changed docs/chunks).,Release can be created and exported deterministically; diff report shows counts and sample IDs; presigned artifacts linked.,Add models/API for Release; snapshot manifests; diff engine; CLI/Make target; docs.,models.py; api/main.py; exporters/release.py; scripts/cli_release.py,tests/test_releases_and_diff.py,[F40-05] Dataset releases & snapshotting
F40-06,Curation Workflow,Active-learning triage board,"Rank chunks by uncertainty (low text coverage, low OCR confidence, missing required fields, conflicting suggestions). Provide list with reasons.",GET /curation/next returns prioritized IDs with reasons; curators report ≥30% fewer edits to hit gates on pilot.,Implement scoring functions; API endpoint; UI integration stub; docs.,core/active_learning.py; api/main.py; ui/curation-lite/*,tests/test_active_learning_queue.py,[F40-06] Active-learning triage board
F40-07,Exports,Stratified & balanced splits,"Export train/val/test with seeded, stratified sampling by fields (e.g., severity, source_type); doc-level grouping to avoid leakage.",Split balance within ±3% of target; deterministic given same seed; manifest records split stats.,Add splitter module; wire into exporters; add parameters and docs.,exporters/splitter.py; exporters/common.py,tests/test_stratified_split.py,[F40-07] Stratified & balanced splits
F40-08,Dataset Quality,Near-duplicate filtering (doc + chunk),Compute MinHash/SimHash signatures; use LSH to drop near-duplicate docs/chunks at export time with threshold toggle.,Duplicate rate reduced ≥60% with <2% useful-data loss on sample; manifest shows drop stats.,Implement signatures + LSH; exporter option; metrics and docs.,core/dedupe.py; exporters/common.py,tests/test_dedupe.py,[F40-08] Near-duplicate filtering
F40-09,Retrieval & Readiness,Embeddings + semantic search,Optional embeddings index (pgvector/FAISS) over chunks; search API for QA/eval and demo; configurable model.,Top-k search latency ≤200ms locally; accuracy sanity checks pass; demo page returns relevant chunks.,Add embeddings job; index writer; search endpoint; minimal demo UI.,retrieval/embeddings.py; retrieval/index.py; api/search.py; ui/demo/*,tests/test_semantic_search.py,[F40-09] Embeddings + semantic search
F40-10,Parser & Data Quality,Math/Code spans detection,"Detect fenced code, LaTeX math, and monospace spans (PDF heuristic); tag blocks or inline spans to avoid corruption in training/eval.",≥80% correct tagging on curated sample; exports preserve fences; tokenization sanity test passes.,Implement detectors; update exporters to preserve fences; docs.,parsers/spans.py; exporters/common.py,tests/test_spans_detection.py,[F40-10] Math/Code spans detection
F40-11,Parser & Data Quality,Multilingual OCR & language tags,Detect language per page/file; configure Tesseract langs per project; store per-page lang and langs_used in manifest.,≥15% text coverage lift on non-English sample; manifest includes lang tags; gates can warn on unknown language.,Add lang detector; adjust OCR config; extend manifest; docs.,core/lang_detect.py; worker/ocr/config.py; api/schemas.py,tests/test_multilingual_ocr.py,[F40-11] Multilingual OCR & language tags
F40-12,Training Readiness,RAG eval harness (baseline),Run prompt sets against baseline models vs your dataset; log answers and simple judge metrics; small UI to compare.,Leaderboard produced with per-release tracking; reproducible runs via CLI.,Add eval runner; storage for runs; UI page; docs.,evals/runner.py; evals/storage.py; ui/evals/*,tests/test_rag_eval_smoke.py,[F40-12] RAG eval harness
F40-13,Platform,CLI (instructify),"CLI to ingest, reparse, export, create release, diff, scorecard; ideal for CI and power users.",Commands operate end-to-end locally; used in CI pipeline; helpful --help texts.,Create click/typer CLI; wire to API; add Make targets.,scripts/instructify_cli.py; Makefile,tests/test_cli_smoke.py,[F40-13] CLI
F40-14,Platform,Notifications (Slack/email hooks),"Notify on long jobs: ingest finished, export ready, release created; per-project opt-in; include artifact links.",Notifications arrive with correct context; opt-in stored in settings; retries with backoff.,Add notifier service; settings; webhooks/integrations; docs.,core/notify.py; api/main.py; worker/notifications.py,tests/test_notifications.py,[F40-14] Notifications
F40-15,Curation Workflow,Guideline assistant (few-shot explainer),In-UI assistant that explains taxonomy fields with examples and provides rationale for suggestions (uses small model or rules).,Curators rate explanations ≥4/5 on pilot; disagreement rate drops ≥20% on selected fields.,Side panel in Curation Lite; prompt templates; usage logging; docs.,ui/curation-lite/*; core/guidelines.py,tests/test_guideline_assistant_stub.py,[F40-15] Guideline assistant
